{"version":3,"sources":["protocol/intent.ts","controller/js/intentsender.ts","controller/js/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAY,MAAZ;;AAAA,CAAA,UAAY,MAAZ,EAAkB;AAChB,EAAA,MAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACA,EAAA,MAAA,CAAA,aAAA,CAAA,GAAA,aAAA;AACA,EAAA,MAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,MAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,MAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AAEA,EAAA,MAAA,CAAA,YAAA,CAAA,GAAA,YAAA;AACA,EAAA,MAAA,CAAA,eAAA,CAAA,GAAA,eAAA;AACA,EAAA,MAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,EAAA,MAAA,CAAA,cAAA,CAAA,GAAA,cAAA;AACA,EAAA,MAAA,CAAA,gBAAA,CAAA,GAAA,gBAAA;AACD,CAZD,EAAY,MAAM,GAAN,OAAA,CAAA,MAAA,KAAA,OAAA,CAAA,MAAA,GAAM,EAAN,CAAZ;;;;;;ACEA,IAAA,YAAA,GAAA,YAAA;AAGE,WAAA,YAAA,CAAY,UAAZ,EAAkC;AAChC,SAAK,UAAL,GAAkB,UAAlB;AACD;;AAED,EAAA,YAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,MAAL,EAAmB;AACjB,SAAK,UAAL,CAAgB,OAAhB,CAAwB,UAAU,CAAC,MAAnC,EAA2C,MAA3C;AACD,GAFD;;AAGF,SAAA,YAAA;AAVA,CAAA,EAAA;;AAAa,OAAA,CAAA,YAAA,GAAA,YAAA;;;;;;ACAb,IAAA,QAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAEA,SAAS,cAAT,GAAuB;AACrB,MAAM,UAAU,GAAG,IAAI,UAAJ,EAAnB;AACA,MAAM,YAAY,GAAG,IAAI,cAAA,CAAA,YAAJ,CAAiB,UAAjB,CAArB;AAEA,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAT,CAAwB,QAAxB,CAAf;;AACA,EAAA,MAAM,CAAC,OAAP,GAAiB,YAAA;AACf,IAAA,YAAY,CAAC,IAAb,CAAkB,QAAA,CAAA,MAAA,CAAO,YAAzB;AACD,GAFD;;AAIA,EAAA,UAAU,CAAC,SAAX,GAAuB,UAAC,IAAD,EAAO,IAAP,EAAW;AAChC,QAAM,IAAI,GAAG,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAAb;AACA,IAAA,IAAI,CAAC,SAAL,IAAkB,sBAAoB,IAApB,GAAwB,IAAxB,GAA6B,IAA7B,GAAiC,IAAnD;AACD,GAHD;AAID;;AAED,MAAM,CAAC,MAAP,GAAgB,cAAhB","file":"main.aae80bb7.map","sourceRoot":"../src","sourcesContent":["export enum Intent {\n  PRESS_UP = 'press_up',\n  PRESS_RIGHT = 'press_right',\n  PRESS_DOWN = 'press_down',\n  PRESS_LEFT = 'press_left',\n  PRESS_ACTION = 'press_action',\n\n  RELEASE_UP = 'release_up',\n  RELEASE_RIGHT = 'release_right',\n  RELEASE_DOWN = 'release_down',\n  RELEASE_LEFT = 'release_left',\n  RELEASE_ACTION = 'release_action',\n}\n","import { Intent } from '../../protocol/intent';\n\nexport class IntentSender {\n  private airConsole: AirConsole;\n\n  constructor(airConsole: AirConsole) {\n    this.airConsole = airConsole;\n  }\n\n  send(intent: Intent) {\n    this.airConsole.message(AirConsole.SCREEN, intent);\n  }\n}\n","/// <reference path=\"../../../node_modules/airconsole-typescript/airconsole-typescript.d.ts\" />\n\nimport { Intent } from '../../protocol/intent';\nimport { IntentSender } from './intentsender';\n\nfunction controllerMain() {\n  const airConsole = new AirConsole();\n  const intentSender = new IntentSender(airConsole);\n\n  const button = document.getElementById('button')!;\n  button.onclick = () => {\n    intentSender.send(Intent.PRESS_ACTION);\n  };\n\n  airConsole.onMessage = (from, data) => {\n    const info = document.getElementById('info')!;\n    info.innerText += `Got message from ${from}: ${data}\\n`;\n  };\n}\n\nwindow.onload = controllerMain;\n"]}